class Solution:
    def longestPalindrome(self, s: str) -> str:
        def is_palindrome (s):
            if len(s) == 1:
                return 1
            elif len(s) == 2: 
                if s[-1] == s[0]:
                    return 1
                else:
                    return 0
            else:
                if len(s) % 2 == 0:
                    if s[0:len(s)//2] == s[len(s):len(s)//2-1:-1]:
                        return 1
                    else:
                        return 0
                else:
                    if s[0:len(s)//2] == s[len(s):len(s)//2:-1]:
                        return 1
                    else:
                        return 0
        
        ret = ""+s[0]

        for i in range (0, len(s)):
            for j in range(len(s), i, -1):
                if j - i < len(ret):
                    break
                elif is_palindrome(s[i:j]) and (len(s[i:j]) > len(ret)):
                    ret = s[i:j]
                    break

        return ret      
